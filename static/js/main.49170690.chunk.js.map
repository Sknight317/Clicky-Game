{"version":3,"sources":["components/ImageCard/index.js","components/Wrapper/index.js","components/Header/index.js","components/Navbar/index.js","App.js","index.js"],"names":["ImageCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","clickImage","id","Wrapper","moveWrap","children","Header","Navbar","message","score","topScore","App","state","clicked","move","shuffle","_this","shuffleArray","setState","includes","endGame","concat","i","length","j","Math","floor","random","_ref","_this2","this","components_Wrapper","components_Navbar","components_Header","map","components_ImageCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"w6DAeeA,MAZf,SAAmBC,GACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,MAAMC,QAAS,kBAAMT,EAAMU,WAAWV,EAAMW,UCFtEC,SAHC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAA6B,SAAjBJ,EAAMa,SAAoB,eAAiB,WAAYb,EAAMc,yBCUxFC,MATf,SAAgBf,GACd,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfJ,EAAMc,YCUCE,SAbA,SAAAhB,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+BAEAF,EAAAC,EAAAC,cAAA,MAAIQ,GAAG,WAAWX,EAAMiB,SAExBhB,EAAAC,EAAAC,cAAA,MAAIQ,GAAG,SAAP,UAAuBX,EAAMkB,OAL/B,KAOEjB,EAAAC,EAAAC,cAAA,MAAIQ,GAAG,aAAP,cAA+BX,EAAMmB,cC8E9BC,6MAjFbC,MAAQ,CACNb,QACAS,QAAS,GAETC,MAAO,EACPC,SAAU,EACVG,QAAS,GACTC,KAAM,WAGVb,WAAa,SAAAC,GAEZ,IAAMa,EAAUC,EAAKC,aAAalB,GAClCiB,EAAKE,SAAS,CAACnB,MAAOgB,IACLC,EAAKJ,MAAMC,QAAQM,SAASjB,GAa9Cc,EAAKI,UAVDJ,EAAKE,SAAS,CAEdL,QAASG,EAAKJ,MAAMC,QAAQQ,OAAO,CAACnB,IACpCO,MAAOO,EAAKJ,MAAMH,MAAQ,EAC1BD,QAAS,WACTM,KAAM,UAONE,EAAKJ,MAAMH,MAAQO,EAAKJ,MAAMF,UAChCM,EAAKE,SAAS,CAAER,SAAUM,EAAKJ,MAAMH,WAGvCW,QAAS,WAENJ,EAAKE,SAAS,CAACT,MAAO,EACPI,QAAS,GACTL,QAAS,2BACTM,KAAM,YAKxBG,aAAe,SAAClB,GACd,IAAK,IAAIuB,EAAIvB,EAAMwB,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADHM,EAEhB,CAAC7B,EAAMyB,GAAIzB,EAAMuB,IAAvCvB,EAAMuB,GAFgCM,EAAA,GAE5B7B,EAAMyB,GAFsBI,EAAA,GAI3C,OAAO7B,2EAKE,IAAA8B,EAAAC,KACP,OAGEtC,EAAAC,EAAAC,cAACqC,EAAD,KACCvC,EAAAC,EAAAC,cAACsC,EAAD,CACCvB,MAAOqB,KAAKlB,MAAMH,MAClBD,QAASsB,KAAKlB,MAAMJ,QACpBE,SAAUoB,KAAKlB,MAAMF,WAGrBlB,EAAAC,EAAAC,cAACuC,EAAD,MAGCH,KAAKlB,MAAMb,MAAMmC,IAAI,SAAAnC,GAAK,OACzBP,EAAAC,EAAAC,cAACyC,EAAD,CACElC,WAAY4B,EAAK5B,WACjBC,GAAIH,EAAMG,GACVkC,IAAKrC,EAAMG,GACXH,MAAOA,EAAMA,MACbU,MAAOoB,EAAKjB,MAAMH,kBA3EZ4B,mBCFlBC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.49170690.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ImageCard(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image}onClick={() => props.clickImage(props.id)} />  \r\n        \r\n      </div>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageCard;","import React from \"react\";\r\nimport \"./style.css\";\r\nconst Wrapper = props => <div className= {props.moveWrap===\"true\" ? \"wrapperShake\" : \"wrapper\"}>{props.children}</div>;\r\n\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props) {\r\n  return <div className=\"title\">\r\n        <div className=\"score\">\r\n       {props.children}\r\n\r\n        </div>\r\n        </div>;\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Navbar = props => (\r\n    <nav className=\"navbar-style\">\r\n      <ul>\r\n        <p>Animal Clicky Game</p>\r\n  \r\n        <li id=\"message\">{props.message}</li>\r\n  \r\n        <li id=\"score\">Score: {props.score}</li> |\r\n  \r\n        <li id=\"top-score\">Top Score: {props.topScore}</li>\r\n      </ul>\r\n    </nav>\r\n  );\r\nexport default Navbar;","import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport image from \"./image.json\";\nimport Header from \"./components/Header\"\nimport Navbar from \"./components/Navbar\"\n\nclass App extends Component {\n  // Setting this.state.image to the image json array\n  state = {\n    image,\n    message: \"\",\n    // Set the beginning score equal to zero\n    score: 0,\n    topScore: 0,\n    clicked: [],\n    move: \"false\"\n  };\n\nclickImage = id => {\n  //Sets constant to the shuffle array function to shuffle images\n const shuffle = this.shuffleArray(image);\n this.setState({image: shuffle});\n const contains = this.state.clicked.includes(id)\n //If the id of the image that was just clicked has already been clicked\n if(!contains) {\n    this.setState({\n    //Merge the image that has just been clicked into the clicked array\n    clicked: this.state.clicked.concat([id]),\n    score: this.state.score + 1,\n    message: \"Correct!\",\n    move: \"false\" \n});\n   \n }\n else {\nthis.endGame()\n}//If the current score is greater than the top score; change the topscore to the number of the score\nif (this.state.score > this.state.topScore) {\n  this.setState({ topScore: this.state.score });\n }\n}\nendGame= () => {\n//Empty the clicked array; tell the user they guessed incorrectly\n   this.setState({score: 0,\n                  clicked: [],\n                  message: \"You guessed incorrectly!\",\n                  move: \"true\"\n\n  })\n}\n //Function to rearrange the images\nshuffleArray = (image) => {\n  for (let i = image.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [image[i], image[j]] = [image[j], image[i]];\n  }\n  return image;\n}\n\n\n  // Map over this.state.image and render a imageCard component for each image object\n  render() {\n    return (\n      \n      \n      <Wrapper>\n       <Navbar\n        score={this.state.score}\n        message={this.state.message}\n        topScore={this.state.topScore}\n        />   \n         \n        <Header>\n      \n        </Header>\n        {this.state.image.map(image => (\n          <ImageCard\n            clickImage={this.clickImage}\n            id={image.id}\n            key={image.id}\n            image={image.image}\n            score={this.state.score}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}