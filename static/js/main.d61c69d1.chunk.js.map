{"version":3,"sources":["components/ImageCard/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","index.js"],"names":["ImageCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","clickImage","id","Wrapper","moveWrap","children","Header","App","state","message","score","topScore","clicked","move","shuffle","_this","shuffleArray","setState","includes","concat","i","length","j","Math","floor","random","_ref","_this2","this","components_Wrapper","components_Header","map","components_ImageCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"q5DAeeA,MAZf,SAAmBC,GACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,MAAMC,QAAS,kBAAMT,EAAMU,WAAWV,EAAMW,UCFtEC,SAHC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAA6B,SAAjBJ,EAAMa,SAAoB,eAAiB,WAAYb,EAAMc,yBCUxFC,MATf,SAAgBf,GACd,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfJ,EAAMc,YCgFCE,6MA7EbC,MAAQ,CACNT,QACAU,QAAS,GAETC,MAAO,EACPC,SAAU,EACVC,QAAS,GACTC,KAAM,WAGVZ,WAAa,SAAAC,GAEZ,IAAMY,EAAUC,EAAKC,aAAajB,GAClCgB,EAAKE,SAAS,CAAClB,MAAOe,IAEnBC,EAAKP,MAAMI,QAAQM,SAAShB,GAE7Ba,EAAKE,SAAS,CAACP,MAAO,EACPE,QAAS,GACTH,QAAS,2BACTI,KAAM,SAMtBE,EAAKE,SAAS,CAEZL,QAASG,EAAKP,MAAMI,QAAQO,OAAO,CAACjB,IACpCQ,MAAOK,EAAKP,MAAME,MAAQ,EAC1BD,QAAS,WACTI,KAAM,UAKNE,EAAKP,MAAME,MAAQK,EAAKP,MAAMG,UAChCI,EAAKE,SAAS,CAAEN,SAAUI,EAAKP,MAAME,WAKvCM,aAAe,SAACjB,GACd,IAAK,IAAIqB,EAAIrB,EAAMsB,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADHM,EAEhB,CAAC3B,EAAMuB,GAAIvB,EAAMqB,IAAvCrB,EAAMqB,GAFgCM,EAAA,GAE5B3B,EAAMuB,GAFsBI,EAAA,GAI3C,OAAO3B,2EAKE,IAAA4B,EAAAC,KACP,OAEEpC,EAAAC,EAAAC,cAACmC,EAAD,KAGErC,EAAAC,EAAAC,cAACoC,EAAD,KACAtC,EAAAC,EAAAC,cAAA,mBAAWkC,KAAKpB,MAAME,OACtBlB,EAAAC,EAAAC,cAAA,aAAKkC,KAAKpB,MAAMC,QAAhB,KACAjB,EAAAC,EAAAC,cAAA,uBAAekC,KAAKpB,MAAMG,SAA1B,MAECiB,KAAKpB,MAAMT,MAAMgC,IAAI,SAAAhC,GAAK,OACzBP,EAAAC,EAAAC,cAACsC,EAAD,CACE/B,WAAY0B,EAAK1B,WACjBC,GAAIH,EAAMG,GACV+B,IAAKlC,EAAMG,GACXH,MAAOA,EAAMA,MACbW,MAAOiB,EAAKnB,MAAME,kBAvEZwB,mBCFlBC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d61c69d1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ImageCard(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image}onClick={() => props.clickImage(props.id)} />  \r\n        \r\n      </div>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageCard;","import React from \"react\";\r\nimport \"./style.css\";\r\nconst Wrapper = props => <div className= {props.moveWrap===\"true\" ? \"wrapperShake\" : \"wrapper\"}>{props.children}</div>;\r\n\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props) {\r\n  return <div className=\"title\">\r\n        <div className=\"score\">\r\n       {props.children}\r\n\r\n        </div>\r\n        </div>;\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport image from \"./image.json\";\nimport Header from \"./components/Header\"\n\n\nclass App extends Component {\n  // Setting this.state.image to the image json array\n  state = {\n    image,\n    message: \"\",\n    // Set the beginning score equal to zero\n    score: 0,\n    topScore: 0,\n    clicked: [],\n    move: \"false\"\n  };\n\nclickImage = id => {\n  //Sets constant to the shuffle array function to shuffle images\n const shuffle = this.shuffleArray(image);\n this.setState({image: shuffle});\n //If the id of the image that was just clicked has already been clicked\n if(this.state.clicked.includes(id)) {\n   //Empty the clicked array; tell the user they guessed incorrectly\n   this.setState({score: 0,\n                  clicked: [],\n                  message: \"You guessed incorrectly!\",\n                  move: \"true\"\n\n  })\n \n }\n else {\n  this.setState({\n    //Merge the image that has just been clicked into the clicked array\n    clicked: this.state.clicked.concat([id]),\n    score: this.state.score + 1,\n    message: \"Correct!\",\n    move: \"false\"\n    \n});\n\n}//If the current score is greater than the top score; change the topscore to the number of the score\nif (this.state.score > this.state.topScore) {\n  this.setState({ topScore: this.state.score });\n }\n}\n\n //Function to rearrange the images\nshuffleArray = (image) => {\n  for (let i = image.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [image[i], image[j]] = [image[j], image[i]];\n  }\n  return image;\n}\n\n\n  // Map over this.state.image and render a imageCard component for each image object\n  render() {\n    return (\n      \n      <Wrapper>\n        \n         \n        <Header>\n        <p>Score: {this.state.score}</p>\n        <p> {this.state.message} </p>\n        <p>Top Score: {this.state.topScore} </p>\n        </Header>\n        {this.state.image.map(image => (\n          <ImageCard\n            clickImage={this.clickImage}\n            id={image.id}\n            key={image.id}\n            image={image.image}\n            score={this.state.score}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}